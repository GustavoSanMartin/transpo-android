// Generated by Dagger (https://google.github.io/dagger).
package ca.llamabagel.transpo.di;

import com.squareup.sqldelight.db.SqlDriver;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class TransitDatabaseModule_ProvideSqlDriverFactory implements Factory<SqlDriver> {
  private final TransitDatabaseModule module;

  public TransitDatabaseModule_ProvideSqlDriverFactory(TransitDatabaseModule module) {
    this.module = module;
  }

  @Override
  public SqlDriver get() {
    return proxyProvideSqlDriver(module);
  }

  public static TransitDatabaseModule_ProvideSqlDriverFactory create(TransitDatabaseModule module) {
    return new TransitDatabaseModule_ProvideSqlDriverFactory(module);
  }

  public static SqlDriver proxyProvideSqlDriver(TransitDatabaseModule instance) {
    return Preconditions.checkNotNull(
        instance.provideSqlDriver(), "Cannot return null from a non-@Nullable @Provides method");
  }
}
